<main class="partyPage partyMake partyEdit main container">
    <h1 class="party-make-head">파티 만들기</h1>
    <form class="partyMakeForm">
        <h2 class="title list">
            <!-- Backend -->
            <label for="partyTitle" class="a11yHidden">제목 입력</label>
            <input type="text" placeholder="파티 제목" id="partyTitle" class="partyTitle" />
            <span id="title-error"></span>
        </h2>

        <div class="tagListWrapper">
            <ul class="tagList">
                <li class="tagInputWrapper">
                    <label for="partyTag" class="a11yHidden">태그 입력</label>
                    <input
                        type="text"
                        id="partyTag"
                        class="partyTag"
                        placeholder="Enter키로 태그 입력"
                    />
                </li>
            </ul>
        </div>

        <div class="popular-tag">
            <span>인기태그</span>
            <ul class="top-tags">
                <li id="top-tags-0"></li>
                <li id="top-tags-1"></li>
                <li id="top-tags-2"></li>
                <li id="top-tags-3"></li>
                <li id="top-tags-4"></li>
            </ul>
        </div>

        <dl class="headcountList">
            <div class="headcountItem list">
                <dt>
                    <label for="partyTotalMemeber">모집 총 인원 : </label>
                </dt>
                <dd>
                    <input
                        id="partyTotalMemeber"
                        class="partyTotalMemeber"
                        pattern="[0-9]*"
                        placeholder="0"
                        min="2"
                        max="300"
                    />
                    명
                </dd>
                <span id="maxNumber-error"></span>
            </div>
        </dl>

        <div class="mainSection">
            <section class="partyImageSection">
                <h3 class="title list">파티 이미지 등록<span id="image-error"></span></h3>
                <ul class="partyImageList">
                    <li class="partyImageItem">
                        <label for="partyImage1">
                            이미지 등록
                            <i class="bx bx-plus" aria-hidden="true"></i>
                        </label>
                        <input
                            type="file"
                            class="partyImage"
                            id="partyImage1"
                            accept=".png, .jpg, .jpeg, .svg"
                        />
                        <div class="uploadImageWrapper"></div>
                        <button type="button" class="partyImageReset" aria-label="이미지 삭제">
                            <i class="bx bx-x" aria-hidden="true"></i>
                        </button>
                    </li>
                    <li class="partyImageItem">
                        <label for="partyImage2">
                            이미지 등록
                            <i class="bx bx-plus" aria-hidden="true"></i>
                        </label>
                        <input
                            type="file"
                            class="partyImage"
                            id="partyImage2"
                            accept=".png, .jpg, .jpeg, .svg"
                        />
                        <div class="uploadImageWrapper"></div>
                        <button type="button" class="partyImageReset" aria-label="이미지 삭제">
                            <i class="bx bx-x" aria-hidden="true"></i>
                        </button>
                    </li>
                    <li class="partyImageItem">
                        <label for="partyImage3">
                            이미지 등록
                            <i class="bx bx-plus" aria-hidden="true"></i>
                        </label>
                        <input
                            type="file"
                            class="partyImage"
                            id="partyImage3"
                            accept=".png, .jpg, .jpeg, .svg"
                        />
                        <div class="uploadImageWrapper"></div>
                        <button type="button" class="partyImageReset" aria-label="이미지 삭제">
                            <i class="bx bx-x" aria-hidden="true"></i>
                        </button>
                    </li>
                    <li class="partyImageItem">
                        <label for="partyImage4">
                            이미지 등록
                            <i class="bx bx-plus" aria-hidden="true"></i>
                        </label>
                        <input
                            type="file"
                            class="partyImage"
                            id="partyImage4"
                            accept=".png, .jpg, .jpeg, .svg"
                        />
                        <div class="uploadImageWrapper"></div>
                        <button type="button" class="partyImageReset" aria-label="이미지 삭제">
                            <i class="bx bx-x" aria-hidden="true"></i>
                        </button>
                    </li>
                </ul>
            </section>

            <div class="partyInfoWrapper">
                <section class="IntroduceSection">
                    <h3 class="title">
                        <label class="list" for="partyIntroduce"
                            >파티 소개<span id="intro-error"></span
                        ></label>
                    </h3>
                    <p>
                        <textarea
                            id="partyIntroduce"
                            class="partyIntroduce"
                            placeholder="파티 소개글 입력"
                        ></textarea>
                    </p>
                </section>

                <section class="calendarSection">
                    <h3 class="title list">
                        날짜 선택<span id="date-error">닐짜를 선택해주세요</span>
                    </h3>
                    <div class="datePickerWrapper">
                        <input type="text" class="datePicker" placeholder="Select date" readonly />
                        <div class="calendar"></div>
                    </div>
                </section>

                <section class="regionSection">
                    <h3 class="title list">지역<span id="address-error"></span></h3>
                    <div class="addressSearchWrapper">
                        <input
                            type="button"
                            id="partyAddressSearch"
                            class="partyAddressSearch"
                            onclick="findAddress()"
                            value="주소 검색"
                            readonly
                        />
                    </div>
                    <div class="addressDetailWrapper">
                        <input
                            type="text"
                            id="partyAddressDetail"
                            class="partyAddressDetail"
                            placeholder="도로명 주소"
                            readonly
                        />
                    </div>
                    <div class="addressDetailWrapper">
                        <input
                            type="text"
                            id="partyAddressDetails"
                            class="partyAddressDetails"
                            placeholder="상세 주소 입력"
                        />
                    </div>

                    <!-- 지도 삽입 -->
                </section>
            </div>
        </div>
        <button type="submit" id="enterBtn" class="partyFormSubmit btn_primary btn_point">
            등록하기
        </button>
        <div class="button-padding" style="padding-bottom: 50px"></div>
    </form>
</main>

<script>
    $(document).ready(function () {
        getMyInfo(function (userInfo) {
            userInfo
                ? getToptTags()
                : customAlert('로그인 후 이용 가능합니다.', function () {
                      window.location.replace('/login');
                  });
        });
    });

    function getToptTags() {
        $.ajax({
            type: 'GET',
            url: 'api/party/top-tags',
            success: function (response) {
                for (i = 0; i < response.length; i++) {
                    $(`#top-tags-${i}`).append(response[i].tagName);
                }
            },
            error: function (response) {
                customAlert(response.responseJSON.message, function () {
                    window.location.reload();
                });
            },
        });
    }

    document.querySelector('.top-tags').addEventListener('click', (e)=> {
        addTag(e.target.outerText)
    })

    const partyMakeForm = document.querySelector('.partyMakeForm');
    const formData = new FormData();
    const uploadedFiles = [];

    document.querySelectorAll('.partyImageItem').forEach(($imageItem) => {
        // image 업로드 시
        $imageItem.addEventListener('change', (e) => {
            if (!e.target.matches('.partyImage') || e.target.closest('.uploaded')) return;

            const file = e.target.files[0];
            const fileName = encodeURIComponent(file.name);

            if (uploadedFiles.includes(fileName)) {
                // 이미 추가된 파일 중 하나와 같은 이름을 가진 파일이면 추가하지 않음
                return;
            }

            formData.append('files[]', file, fileName);
            uploadedFiles.push(fileName);

            $imageItem.classList.add('uploaded');
            $imageItem.querySelector(
                '.uploadImageWrapper',
            ).innerHTML = `<img src="${URL.createObjectURL(
                file,
            )}" class="uploadedImage" alt="${fileName}">`;
        });

        // 이미지 삭제 버튼 클릭시
        $imageItem.addEventListener('click', (e) => {
            if (!e.target.matches('.partyImageReset')) return;

            const fileName = $imageItem.querySelector('.uploadedImage').alt;
            $imageItem.classList.remove('uploaded');
            $imageItem.querySelector('.uploadImageWrapper').innerHTML = '';

            const index = uploadedFiles.indexOf(fileName);
            // 파일이 있다면
            if (index > -1) {
                uploadedFiles.splice(index, 1);

                const formDataFiles = formData.getAll('files[]');
                formData.delete('files[]');
                formDataFiles.forEach((file) => {
                    if (file.name !== fileName) {
                        formData.append('files[]', file);
                    }
                });
            }
        });
    });

    document.querySelector('.tagList').addEventListener('click', (e) => {
        // 태그 삭제 버튼 클릭시
        if (e.target.closest('.tagResetButton')) e.target.closest('.tagItem').remove();
    });

    partyMakeForm.addEventListener('keydown', (e) => {
        if (e.key !== 'Enter') return;
        if (e.target.matches('.partyIntroduce')) {
            e.target.value += '\n';
            return;
        }
        if (e.keyCode === 229 || e.isComposing) return; // enter keydown 이벤트 감지시 한글 입력 깨지는 문제 해결

        e.preventDefault(); // enter키 눌렸을 때 submit 이벤트 방지

        // tag input에서 enter 입력했을 경우 태그 추가
        if (e.target.matches('.partyTag')) {
            addTag(e.target.value);
            e.target.value = '';
        }
    });

    let errorId = [
        'title-error',
        'maxNumber-error',
        'image-error',
        'intro-error',
        'date-error',
        'address-error',
    ];
    let error = document.querySelectorAll('.list > span');

    function innerReset(error) {
        for (let i = 0; i < error.length; i++) {
            error[i].innerHTML = '';
        }
    }

    innerReset(error);

    // 등록하기 버튼 눌렸을 때
    partyMakeForm.addEventListener('submit', (e) => {
        e.preventDefault();

        let errorStr = [
            ' 파티 제목을',
            ' 모집 인원을',
            ' 이미지를',
            ' 파티 소개를',
            ' 날짜를',
            ' 도로명 주소를',
            ' 상세 주소를',
        ];

        innerReset(error);

        if (!$('#partyTitle').val().trim()) {
            document.getElementById(errorId[0]).innerHTML = errorStr[0] + ' 입력해 주세요.';
            $('#partyTitle').focus();
            return false;
        }

        if (!$('#partyTotalMemeber').val() || $('#partyTotalMemeber').val() < 1) {
            document.getElementById(errorId[1]).innerHTML = errorStr[1] + ' 입력해 주세요.';
            $('#partyTotalMemeber').focus();
            return false;
        }

        if ($('#partyTotalMemeber').val().trim() < 2) {
            document.getElementById(errorId[1]).innerHTML =
                errorStr[1] + ' 2명 이상 입력해 주세요.';
            $('#partyTotalMemeber').focus();
            return false;
        }

        if (!uploadedFiles.length) {
            document.getElementById(errorId[2]).innerHTML = errorStr[2] + ' 등록 해주세요.';
            $('#partyTotalMemeber').focus();
            return false;
        }

        if (!$('#partyIntroduce').val().trim()) {
            document.getElementById(errorId[3]).innerHTML = errorStr[3] + ' 입력해 주세요.';
            $('#partyImage1').focus();
            return false;
        }

        if (!$('.datePicker').val().trim()) {
            document.getElementById(errorId[4]).innerHTML = errorStr[4] + ' 입력해 주세요.';
            $('#partyImage1').focus();
            return false;
        }

        if (!$('#partyAddressDetail').val().trim()) {
            document.getElementById(errorId[5]).innerHTML = errorStr[5] + ' 입력해 주세요.';
            $('#partyAddressDetail').focus();
            return false;
        }

        if (!$('#partyAddressDetails').val().trim()) {
            document.getElementById(errorId[5]).innerHTML = errorStr[6] + ' 입력해 주세요.';
            $('#partyAddressDetail').focus();
            return false;
        }

        $.ajax({
            type: 'POST',
            url: '/file/upload',
            cache: false,
            contentType: false,
            processData: false,
            data: formData,
            success: function (response) {
                let image = [];
                for (let i = 0; i < response.length; i++) {
                    image.push(response[i].filePath.location);
                }
                saveParty(image);
            },
            error: function (response) {
                customAlert(response.responseJSON.message, function () {
                    window.location.reload();
                });
            },
        });

        function saveParty(image) {
            // tag 배열로 뽑아오기
            const tagList = [...e.target.querySelectorAll('.tag')].map((tag) => tag.textContent);
            // 파티 만들기 ajax
            const partyInfo = {
                title: $('#partyTitle').val(),
                content: $('#partyIntroduce').val(),
                maxMember: $('#partyTotalMemeber').val(),
                address: $('#partyAddressDetail').val() + ' ' + $('#partyAddressDetails').val(),
                date: new Date($('.datePicker').val()),
                thumbnail: image,
                tagName: tagList,
            };
            $.ajax({
                type: 'POST',
                url: `api/party`,
                data: partyInfo,
                headers: {
                    authorization: `Bearer ${sessionStorage.getItem('accessToken')}`,
                    refreshtoken: `${sessionStorage.getItem('refreshToken')}`,
                },
                success: function (response) {
                    customAlert('파티가 생성되었습니다!', function () {
                        window.location.replace('/party');
                    });
                },
                error: function (error) {
                    customAlert(error.responseJSON.message, function () {
                        window.location.reload();
                    });
                },
            });
        }
    });

    function addTag(value) {
        if (value.trim() === '') return;

        const newTagItem = document.createElement('li');
        newTagItem.classList.add('tagItem');

        newTagItem.innerHTML = `
        #
        <p class="tag">${value}</p>
        <button
            type="button"
            class="tagResetButton"
            aria-label="해당 태그 삭제"
        >
            <i class="bx bx-x" aria-hidden="true"></i>
        </button>
        `;

        document.querySelector('.tagInputWrapper').insertAdjacentElement('beforebegin', newTagItem);
    }

    function findAddress() {
        new daum.Postcode({
            oncomplete: function (data) {
                // 사용자 주소를 받아올 변수를 정의한다.
                var addr = '';

                //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.
                if (data.userSelectedType === 'R') {
                    // 사용자가 도로명 주소를 선택했을 경우(R)
                    addr = data.roadAddress;
                } else {
                    // 사용자가 지번 주소를 선택했을 경우(J)
                    addr = data.jibunAddress;
                }

                // 부모창의 주소칸에 받아온 주소를 넣는다.
                $('#partyAddressDetail').val(addr);
            },
        }).open();
    }

</script>
