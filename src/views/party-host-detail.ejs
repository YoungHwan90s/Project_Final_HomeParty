<h2>파티 상세페이지 호스트 화면</h2>
<body>
    <!-- Responsive navbar-->
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container">
            <a class="navbar-brand fs-3 " href="#!">MoAvA </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation"><span class="navbar-toggler-icon"></span></button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
                    <li class="nav-item"><a class="nav-link active" aria-current="page" href="#!">Home</a></li>
                    <li class="nav-item"><a class="nav-link" href="#!">메세지</a></li>
                    <li class="nav-item"><a class="nav-link" href="#!">마이페이지</a></li>
                </ul>
            </div>
        </div>
    </nav>
    <!-- Header - set the background image for the header in the line below-->
    <header class="py-5 bg-image-full" style="background-color: white ">
        <div class="text-center my-3" id="userinfo">
            <!-- <img class="img-fluid rounded-circle mb-4" src="http://i.pravatar.cc/500?img=7" alt="..." style="width: 15%; height: 15%;" />
            <h1 class="text-black fs-3 fw-bolder">안녕하세요. 호스트이름 입니다.</h1>
            <p class="text-black-50 mb-0" id="sign-up-date">가입날짜:1926</p>
            <div class="border width" data-width="0.5px" role="presentation" style="margin-left: 40%;margin-right: 40%;margin-top:1%;margin-bottom:2%;" ></div>
            <h1 class="text-black fs-3 fw-bolder" >소개</h1>
            <p class="text-black-50 mb-0" id="host-email">이메일 : test@yahoo</p>
        </div> -->
    </header>
    <div class="border width" data-width="0.5px" role="presentation" style="margin-left: 10%;margin-right: 10%"></div>
    <h1 class="text-black fs-3 fw-bolder">주요 활동지역</h1>
    <div id="map" style="margin: auto; width: 30%; height: 250px"></div> 
    <!-- Content section-->
    <section class="py-5">
        <div class="container my-5">
            <div class="row justify-content-center">
                <div class="col-lg-6">
                    <h1 class="text-black fs-3 fw-bolder">⭐리뷰</h1>
                    <div style="margin-top: 8%;" id="reviews-container">
                       <!-- 리뷰 데이터가 출력될 공간 -->
                    </div>
    </section> 
</body>

<!-- 카카오맵  -->
<div id="map" style="margin: auto; width: 30%; height: 250px"></div>
<script
    type="text/javascript"
    src="//dapi.kakao.com/v2/maps/sdk.js?appkey=70d8ff63eb262881fd470f567a2259ab&libraries=services,clusterer"
></script>
<script>
    $(document).ready(() => {
        const param = window.location.pathname.split('/')[2]; 
        const hostId = Number(param)
        $.ajax({
            url: `/review/${hostId}`, // 리뷰 데이터 요청 URL
            type: 'GET',
            dataType: 'json',
            headers: {
                authorization: `Bearer ${sessionStorage.getItem('accessToken')}`,
                refreshtoken: `${sessionStorage.getItem('refreshToken')}`,
            },
            success: function (data) {
                console.log(data);
                for(i=0; i < data.length; i++){
                    let id = data[i].id
                    console.log(id);
                }
    //             $('#reviews-container').empty();
    //             data.map((reviewInfo) => {
    //                 const createdAt = new Date(reviewInfo.createdAt);
    //                 let html = `
    //                 <div style="margin-top: 8%;">
    //                         <img class="img-fluid rounded-circle me-4" src="http://i.pravatar.cc/500?img=7" alt="..." style="width: 22%;  float: left;"/>
    //                         <div>
    //                             <h1 class="text-black fs-5 fw-bolder">${reviewInfo.userId}</h1>
    //                             <p class="text-black-50 mb-0">작성일:${createdAt.getFullYear()}-${createdAt.getMonth() + 1}</p>
    //                             <p class="text-black-50 mb-0">평점: ${reviewInfo.rating}점</p>
    //                             <p class="lead">${Review.review}</p>
    //                         </div>
    //                     </div>`
    //                     $('#reviews-container').append(html);
    //                 });
                }
            });
    })
    $(document).ready(() => {
        const param = window.location.pathname.split('/')[2]; 
        const userId = Number(param)
            $.ajax({
                url:`/user/${userId}`,
                type: 'GET',
                dataType:'json',
                headers: {
                authorization: `Bearer ${sessionStorage.getItem('accessToken')}`,
                refreshtoken: `${sessionStorage.getItem('refreshToken')}`,
            },
            success: function (data) {
                data.map(() => {
                    let info = `
                    <img class="img-fluid rounded-circle mb-4" src="http://i.pravatar.cc/500?img=7" alt="..." style="width: 15%; height: 15%;" />
                        <h1 class="text-black fs-3 fw-bolder">안녕하세요. ${userId.name} 입니다.</h1>
                        <p class="text-black-50 mb-0" id="sign-up-date">가입날짜:${userId.createdAt.getFullYear()}년</p>
                        <div class="border width" data-width="0.5px" role="presentation" style="margin-left: 40%;margin-right: 40%;margin-top:1%;margin-bottom:2%;" ></div>
                        <h1 class="text-black fs-3 fw-bolder" >소개</h1>
                        <p class="text-black-50 mb-0" id="host-email">이메일 : ${userId.email}</p>
                    `
                    $('#userinfo').append(info)
                })
            }
            })
        }
    )
    $(function () {
        // 별점 표시
        const drawStar = (target) => {
            $('.star span').css({ width: `${target.value * 10}%` });
        };
    });

    // 서버로 데이터 전송
    function reviews() {
        const partyId = window.location.pathname.split('/')[2]; //변경해야됨
        const reviewInfo = {
            review: $('#input-review').val(), //  리뷰 내용
            rating: $('.input-star input[type="range"]').val(), // 별점
        };

        $.ajax({
            type: 'POST',
            url: `/review/${partyId}`,
            data: reviewInfo,
            headers: {
                authorization: `Bearer ${sessionStorage.getItem('accessToken')}`,
                refreshtoken: `${sessionStorage.getItem('refreshToken')}`,
            },
            success: function (response) {
                // 서버로부터 응답 받은 후 처리할 코드 작성
                alert('리뷰가 등록되었습니다.');
                location.reload();
            },
            error: function (error) {
                // 서버로부터 오류 응답 받은 후 처리할 코드 작성
                alert('올바르지않은 값입니다.');
            },
        });
    }
   


    function updatereview(reviewId) {
        const updatereviewform = $('#updatereviewform').val();
        $.ajax({
            type: 'PATCH',
            url: `/review/${reviewId}`,
            data: {
                review: updatereviewform,
            },
            headers: {
                authorization: `Bearer ${sessionStorage.getItem('accessToken')}`,
                refreshtoken: `${sessionStorage.getItem('refreshToken')}`,
            },
            success: function (response) {
                // 서버로부터 응답 받은 후 처리할 코드 작성
                alert('리뷰가 수정되었습니다.');
                location.reload();
            },
            error: function (error) {
                // 서버로부터 오류 응답 받은 후 처리할 코드 작성
                alert('올바르지 않은 값입니다.');
            },
        });
        console.log(id);
    }

    function deletereview(reviewId) {
        $.ajax({
            type: 'DELETE',
            url: `/review/${reviewId}`,
            headers: {
                authorization: `Bearer ${sessionStorage.getItem('accessToken')}`,
                refreshtoken: `${sessionStorage.getItem('refreshToken')}`,
            },
            success: function (response) {
                alert('리뷰가 삭제되었습니다.');
                location.reload();
            },
            error: function (error) {
                alert('올바르지 않은 값입니다.');
            },
        });
    }
</script>

<!-- 카카오맵 -->
<script>
    var mapContainer = document.getElementById('map'), // 지도를 표시할 div
        mapOption = {
            center: new kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표
            level: 6, // 지도의 확대 레벨
        };

    // 지도를 생성합니다
    var map = new kakao.maps.Map(mapContainer, mapOption);
    // 마우스 휠과 모바일 터치를 이용한 지도 확대, 축소를 막는다
    // map.setZoomable(false);
    // 주소-좌표 변환 객체를 생성합니다
    var geocoder = new kakao.maps.services.Geocoder();
    // 지도 타입 변경 컨트롤을 생성한다
    var mapTypeControl = new kakao.maps.MapTypeControl();
    // 지도의 상단 우측에 지도 타입 변경 컨트롤을 추가한다
    map.addControl(mapTypeControl, kakao.maps.ControlPosition.TOPRIGHT);
    // 지도에 확대 축소 컨트롤을 생성한다
    var zoomControl = new kakao.maps.ZoomControl();
    // 지도의 우측에 확대 축소 컨트롤을 추가한다
    map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);
    // 마커 이미지의 주소
    var markerImageUrl = 'https://cdn-icons-png.flaticon.com/512/9181/9181917.png',
        markerImageSize = new kakao.maps.Size(51, 52), // 마커 이미지의 크기
        markerImageOptions = {
            offset: new kakao.maps.Point(25, 25), // 마커 좌표에 일치시킬 이미지 안의 좌표
        };
    // 마커 이미지를 생성한다
    var markerImage = new kakao.maps.MarkerImage(
        markerImageUrl,
        markerImageSize,
        markerImageOptions,
    );
    // 주소로 좌표를 검색합니다
    geocoder.addressSearch('건원대로34번길 32-29', function (result, status) {
        // 무조건 도로명 주소를 작성해줘야된다

        // 정상적으로 검색이 완료됐으면
        if (status === kakao.maps.services.Status.OK) {
            var coords = new kakao.maps.LatLng(result[0].y, result[0].x);
            console.log(coords);
            // 결과값으로 받은 위치를 마커로 표시합니다
            var marker = new kakao.maps.Marker({
                map: map,
                image: markerImage, // 마커의 이미지
                position: coords,
            });

            // 인포윈도우로 장소에 대한 설명을 표시합니다
            var infowindow = new kakao.maps.InfoWindow({
                content:
                    '<div style="background-color: white; color: black; padding: 8px; border-radius: 10px; width: auto; white-space: nowrap;">정확한 위치는 신청완료 후에 표시 됩니다.</div>',
            });
            infowindow.open(map, marker);

            // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다
            map.setCenter(coords);
        }
        // 지도에 원을 표시한다
        var circle = new kakao.maps.Circle({
            map: map, // 원을 표시할 지도 객체
            center: new kakao.maps.LatLng(result[0].y, result[0].x), // 지도의 중심 좌표
            radius: 500, //미터 단위의 원의 반지름
            strokeWeight: 5, // 선의 두께
            strokeColor: '#75B8FA', //선의 색깔
            strokeOpacity: 0, //선의 불투명도 0에 가까울수록 투명해짐
            fillColor: '#F7BCCC', //채우기 색깔
            fillOpacity: 0.5, // 채우기 불투명도
        });
    });
</script>
