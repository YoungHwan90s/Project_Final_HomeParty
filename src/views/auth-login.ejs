<h2>로그인 화면</h2>

<div>
    <label for="exampleInputMobile">이메일</label>
    <input type="text" class="form-control mt-2" id="input-email" placeholder="이메일입력해" />
</div>

<div>
    <label for="exampleInputMobile">비번</label>
    <input type="text" class="form-control mt-2" id="input-password" placeholder="비밀번호 입력해" />
</div>

<button onclick="login()">로그인</button>

<script>
    function login() {
        const loginInfo = {
            email: $('#input-email').val(),
            password: $('#input-password').val(),
        };
        $.ajax({
            type: 'POST',
            url: '/auth/login',
            data: loginInfo,
            success: function (response) {
                window.location.href = '/';
            },
            error: function (error) {
                customAlert(error.responseJSON.message, function() {
                    window.location.reload()
                });
            },
        });
    }
</script>


<!DOCTYPE html>
<html lang="ko"> 
<head>
<meta charset="UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<link href="https://webfontworld.github.io/naver/NanumSquare.css" rel="stylesheet">
<!-- 아이콘 링크 -->
<link rel="stylesheet" href="https://unicons.iconscout.com/release/v4.0.0/css/line.css">
<link rel="stylesheet" href="nlogin.css">

</head>
<body> 

   <div class="wrapper-login">
      <form method ="post" name="join" id="join">
            <!-- 로그인 로고 자리 -->
            <header class="login-header">
                <div id="header-login">
                    <h1 class="login-logo">
                        <span><img alt="" src=""></span>
                        <p>글씨</p>
                    </h1>
                </div>
            </header>

        <div id="container-login">
            <div class="row-group">
              <div class="user-input">
                    <!-- 이메일 입력 -->

                    <h3 class="list">이메일<span id="email-error"></span></h3>
                    <span class="input-wrapper email-int box" id="emailBox">
                        <input type="text" id="email" maxlength="20" class="check email-input" > 
                        <span>@</span> 
                        <!-- 이메일 택일 -->
                        <select id="mail-select">
                            <option>이메일 선택</option>
                            <option>naver.com</option>
                            <option>gmail.com</option>
                            <option>daum.net</option>
                            <option>hanmail.net</option>
                            <option>hotmail.com</option>
                            <option>nate.com</option>
                            <option>yahoo.co.kr</option>
                            <option>empas.com</option>
                            <option>freechal.com</option>
                            <option>lycos.co.kr</option>
                            <option>korea.com</option>
                            <option>hanmir.com</option>
                            <option>dreamwiz.com</option>
                            <option>paran.com</option>
                        </select>
                    </span>

                </div>

                <div class="user-input">
                    <!-- 비밀번호 입력 -->
                  <h3 class="list">비밀번호<span id="pw-error"></span></h3>
                  <span class="box int-id">
                        <input type="password" id="pw" class="int check"
                     maxlength="20">
                    </span>
                </div>

                <div class="btn_area">
                    <button type="button" id="btnJoin" class="btn_type btn_primary">로그인</button>
                 </div>

            </div>

               

		<!--class,PW 찾기 및 회원가입 부분-->
		<section class="find-signup-wrap">

			<span class="find-id">
				<a href="https://nclass.naver.com/user2/help/classInquiry?lang=ko_KR" target="_blank"
					title="QR코드 로그인">아이디 찾기</a>
			</span>

			<span class="find-pw">
				<a href="https://nclass.naver.com/user2/help/pwInquiry?lang=ko_KR" target="_blank"
					title="일회용번호 로그인">비밀번호 찾기</a>
			</span>

			<span class="sign-up">
				<a href="https://nclass.naver.com/user2/V2Join?m=agree&lang=ko_KR" target="_blank"
					title="일회용번호 로그인">회원가입</a>
			</span>

		</section>
        <div class="login-box">
            <button><img src="kakao.png">카카오 로그인</button>
        </div>

             </div>
             </form>
             </div>

<script>

             //회원가입 유효성검사
             // 자원을 화면에 로드하게 되면 수행할 동작(==function)
             window.onload = function() {
                   var join = document.join; //form데이터를 모두 join변수에 저장
                   
                   // 유효성검사할 부분을 class로 부여했기에 check class 태그를 모두 input에 저장 가져옴
                   // 이때 input 한 태그당 배열 인덱스로 받는다.
                   var input = document.querySelectorAll('.check');
             
                   // 오류 문구 //errorId : span의 id들(각 요소마다 나타낼 오류를 표시하기 위함)
                   // error : class list의 하위 span을 모두 불러냄(일괄 처리를 위함 - 반복문)
                   var errorId = [ "idError", "pw-error", "pw-check-error", "name-error", "phone-num-error", "email-error" ];
                   var error = document.querySelectorAll('.list > span');
                
                   
                   // 오류문구 초기화 메서드
                   // 오류 표시 후, 사용자가 올바르게 수정을 하면 텍스트가 사라지는 모습을 구현
                   function innerReset(error){
                      for (var i = 0; i < error.length; i++) {
                         error[i].innerHTML = "";
                      }
                   }
             
                   // 초기화 메서드 호출
                   innerReset(error);
             
                   // [ ID 입력문자 유효성검사 ] 
                   join.id.onkeydown = function(){
                      innerReset(error); // 초기화 메서드 호출
                      var idLimit = /^[a-zA-Z0-9-_]{5,20}$/; //정규식 5~20자 (a~z, A~Z, 0~9, -, _만 입력가능)
                      if (!idLimit.test(input[0].value)) { //입력값과 정규식 범위와 같지 않다면
                         // id의 오류 문구삽입
                         document.getElementById(errorId[0]).innerHTML = "5~20자의 영문 소대문자, 숫자와 특수기호(_),(-)만 사용 가능합니다.";
             
                      }
                   }
                   // [ PW 입력문자 유효성검사 ]
                   join.pw.onkeydown = function(){
                      innerReset(error); // 초기화 메서드 호출
                      var pwLimit = /^[a-zA-Z0-9~!@#$%^&*()_-]{10,20}$/; //정규식(a~z, A~Z, 0~9, ~!@#$%^&*()_- 만 입력가능)
                      if (!pwLimit.test(input[1].value)) { //입력값과 정규식 범위와 같지 않다면
                         // pw의 오류 문구삽입
                         document.getElementById(errorId[1]).innerHTML = " 10~20자의 영문 소대문자, 숫자와 특수기호 '~!@#$%^&*()_-'만 사용 가능합니다.";
                      }   
                   }
                   // [ PW 재확인 입력문자 초기화 ]
                   //비밀번호 동일여부는 submit 버튼 클릭시 검사해줄 예정
                   join.pw-check.onkeydown = function(){
                      // pw의 오류 문구삽입
                      innerReset(error);// 오류문구 초기화   
                   }
                      // [ 이메일 입력 유효성검사 ] 
                      join.email.onkeydown = function(){ //입력값과 정규식 범위와 같지 않다면
                         innerReset(error); // 초기화 메서드 호출
                         var emailLimit = /[0-9a-zA-Z-_.]/; // 정규식 0~9, a~z, A~Z, -, _, .내에서만 입력가능
                            if (!emailLimit.test(input[5].value)) {  //입력값과 정규식 범위와 같지 않다면
                               // 이메일의 오류 문구삽입
                               document.getElementById(errorId[5]).innerHTML = " 올바른 형식이 아닙니다. 영문,숫자, (-)(_)(.) 입력만 가능합니다.";
                            }
                         }
                        }
                        //submit 실행시 수행할 동작
  join.onsubmit = function() { //join에서 submit이 실행된다면 수행할 함수           
    var errorStr = [ " 아이디를", " 비밀번호를", " 비밀번호 확인을", " 성함을", " 휴대폰번호를", " 이메일을" ];
    
    innerReset(error); // 오류문구 초기화
    
    // [ input 공백확인 ]
    for (var i = 0; i < input.length - 1; i++) { // -1 == submit제외 
       if (!input[i].value) { 
          document.getElementById(errorId[i]).innerHTML = errorStr[i]+ " 입력해 주세요.";
          input[i].focus(); // 포커스 이동
          return false; // 종료 (포커스 이동유지를 위해 false 종료)
       }
    }         
    
    // [주소 input 공백확인]
    {//지역변수 스코프 조정(address) -일회성사용
       var inputAddress = document.querySelectorAll('.addressCheck');
       for(var i = 0; i < inputAddress.length; i++){
          //console.log(inputAddress[i]);
          if(!inputAddress[i].value){
             document.getElementById("addressError").innerHTML = " 주소 혹은 상세주소를 입력해주세요.";
             return false;   
          }
       }
    }

    // [ PW 유효성검사 ]
    if (!pwLimit.test(input[1].value)) {
       document.getElementById(errorId[1]).innerHTML = " 10~20자의 영문 소대문자, 숫자와 특수기호 '~!@#$%^&*()_-'만 사용 가능합니다.";
       //console.log(input[1].value);
       //console.log(pwLimit.test(input[1].value));
       join.pw.focus(); // 포커스 이동
       return false;
    }         

   // [ email 아이디 유효성검사 ]
    if (!emailLimit.test(input[5].value)) { 
       document.getElementById(errorId[5]).innerHTML = " 올바른 형식이 아닙니다. 영문,숫자, (-)(_)(.) 외 입력은 불가합니다.";
       join.email.focus(); // 포커스 이동
       return false;
    }
    
    alert("회원가입이 완료되었습니다.");


 }//join.onsublit

//window
    </script>
             
             
</body>

</html>