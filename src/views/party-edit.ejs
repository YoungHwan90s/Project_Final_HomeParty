<main class="partyPage partyMake partyEdit main container">
    <form action="" class="partyMakeForm">
        <header class="mainHeader">
            <h2 class="title">
                <!-- Backend -->
                <label for="partyTitle" class="a11yHidden">제목 입력</label>
                <input
                    type="text"
                    placeholder="제목을 입력하세요"
                    id="partyTitle"
                    class="partyTitle"
                />
            </h2>

            <div class="tagListWrapper">
                <ul class="tagList">
                    <li class="tagInputWrapper">
                        <label for="partyTag" class="a11yHidden">태그 입력</label>
                        <input
                            type="text"
                            id="partyTag"
                            class="partyTag"
                            placeholder="Enter키로 태그 입력"
                        />
                    </li>
                </ul>
            </div>

            <dl class="headcountList">
                <div class="headcountItem">
                    <dt>
                        <label for="partyTotalMemeber">총 인원 : </label>
                    </dt>
                    <dd>
                        <input
                            type="number"
                            id="partyTotalMemeber"
                            class="partyTotalMemeber"
                            pattern="[0-9]*"
                            placeholder="0"
                            min="2"
                            max="300"
                        />
                        명
                    </dd>
                </div>
            </dl>
        </header>
        <div class="mainSection">
            <section class="partyImageSection">
                <h3 class="title list">파티 이미지 등록<span id="image-error"></span></h3>
                <ul class="partyImageList">
                    <li class="partyImageItem">
                        <label for="partyImage1">
                            이미지 등록
                            <i class="bx bx-plus" aria-hidden="true"></i>
                        </label>
                        <input
                            type="file"
                            class="partyImage"
                            id="partyImage1"
                            accept=".png, .jpg, .jpeg, .svg"
                        />
                        <div class="uploadImageWrapper"></div>
                        <button type="button" class="partyImageReset" aria-label="이미지 삭제">
                            <i class="bx bx-x" aria-hidden="true"></i>
                        </button>
                    </li>
                    <li class="partyImageItem">
                        <label for="partyImage2">
                            이미지 등록
                            <i class="bx bx-plus" aria-hidden="true"></i>
                        </label>
                        <input
                            type="file"
                            class="partyImage"
                            id="partyImage2"
                            accept=".png, .jpg, .jpeg, .svg"
                        />
                        <div class="uploadImageWrapper"></div>
                        <button type="button" class="partyImageReset" aria-label="이미지 삭제">
                            <i class="bx bx-x" aria-hidden="true"></i>
                        </button>
                    </li>
                    <li class="partyImageItem">
                        <label for="partyImage3">
                            이미지 등록
                            <i class="bx bx-plus" aria-hidden="true"></i>
                        </label>
                        <input
                            type="file"
                            class="partyImage"
                            id="partyImage3"
                            accept=".png, .jpg, .jpeg, .svg"
                        />
                        <div class="uploadImageWrapper"></div>
                        <button type="button" class="partyImageReset" aria-label="이미지 삭제">
                            <i class="bx bx-x" aria-hidden="true"></i>
                        </button>
                    </li>
                    <li class="partyImageItem">
                        <label for="partyImage4">
                            이미지 등록
                            <i class="bx bx-plus" aria-hidden="true"></i>
                        </label>
                        <input
                            type="file"
                            class="partyImage"
                            id="partyImage4"
                            accept=".png, .jpg, .jpeg, .svg"
                        />
                        <div class="uploadImageWrapper"></div>
                        <button type="button" class="partyImageReset" aria-label="이미지 삭제">
                            <i class="bx bx-x" aria-hidden="true"></i>
                        </button>
                    </li>
                </ul>
            </section>

            <div class="partyInfoWrapper">
                <section class="IntroduceSection">
                    <h3 class="title">
                        <label class="list" for="partyIntroduce"
                            >파티 소개<span id="intro-error"></span
                        ></label>

                    </h3>
                    <p>
                        <textarea
                            id="partyIntroduce"
                            class="partyIntroduce"
                            placeholder="파티 소개글 입력"
                        ></textarea>
                    </p>
                </section>

                <section class="calendarSection">
                    <h3 class="title list" style="color: red">날짜 변경</h3>
                    <div class="datePickerWrapper">
                        <input type="text" class="datePicker" placeholder="Select date" readonly />
                        <div class="calendar"></div>
                    </div>
                </section>

                <section class="regionSection">
                    <h3 class="title list">현재주소<span id="address-error"></span></h3>
                    <div class="addressWrapper"></div>
                    <div class="addressSearchWrapper">
                        <label for="partyAddressSearch" class="a11yHidden">현재 주소</label>
                        <input
                            type="button"
                            id="partyAddressSearch-1"
                            class="partyAddressSearch"
                            onclick="findAddress()"
                            value="주소 변경"
                            readonly
                            style="margin-top: 8px; color: red"
                        />
                        <input
                            type="text"
                            id="partyAddressSearch"
                            class="partyAddressSearch"
                            placeholder="도로명 주소"
                            readonly
                        />
                    </div>
                    <div class="addressDetailWrapper">
                        <label for="partyAddressDetail" class="a11yHidden">상세 주소 입력</label>
                        <input
                            type="text"
                            id="partyAddressDetail"
                            class="partyAddressDetail"
                            placeholder="상세 주소 입력"
                        />
                    </div>

                    <!-- 지도 삽입 -->
                </section>
            </div>
        </div>
        <button type="submit" class="partyFormSubmit btn_primary btn_point">수정하기</button>
    </form>
</main>

<script>
    $(document).ready(function () {
        getMyInfo(function (userInfo) {
            if (userInfo) {
                $('.hostName').text(userInfo.name);
                $('#hostProfile').attr('src', userInfo.profile);
            }
        });
    });

    const partyId = Number(window.location.pathname.split('/')[2]);

    let hostId;
    let title;
    let content;
    let maxMember;
    let currMember;
    let thumbnails;
    let address;
    let date;
    let tag;

    $.ajax({
        type: 'GET',
        url: `/api/party/${partyId}`,
        data: {},
        headers: {
            authorization: `Bearer ${sessionStorage.getItem('accessToken')}`,
            refreshtoken: `${sessionStorage.getItem('refreshToken')}`,
        },
        success: function (response) {
            hostId = response.hostId;
            title = response.title;
            content = response.content;
            maxMember = response.maxMember;
            currMember = response.currMember;
            thumbnails = response.thumbnail;
            address = response.address;
            date = response.date;
            tag = response.tag;

            $('.addressWrapper').append(`<p>${address}</p>`);
            $('#partyTitle').val(title);
            $('#partyIntroduce').val(content);
            $('#partyTotalMemeber').val(maxMember);
            $('.datePicker').val(date);

            if (tag.length > 0) {
                tag.forEach((e) => {
                    const tagItemHtml = `
                <li class="tagItem">
                #
                <p class="tag">${e.tagName}</p>
                <button type="button" class="tagResetButton" aria-label="해당 태그 삭제">
                    <i class="bx bx-x" aria-hidden="true"></i>
                </button>
                </li>`;
                    $('.tagList').prepend(tagItemHtml);
                });
            }

            if (thumbnails.length > 0) {
                thumbnails.forEach((item, i) => {
                    const imageWrapper = document.querySelectorAll(
                        '.partyImageItem > .uploadImageWrapper',
                    )[i];

                    imageWrapper.innerHTML = `<img src="${item.thumbnail}" class="uploadedImage" alt="">`;
                    imageWrapper.parentNode.classList.add('uploaded');
                });
            }
        },
    });

    const formData = new FormData();
    const uploadedFiles = [];

    let removedThumbnails = [];

    document.querySelectorAll('.partyImageItem').forEach(($imageItem, i) => {
        // image 업로드 시
        $imageItem.addEventListener('change', (e) => {
            if (!e.target.matches('.partyImage') || e.target.closest('.uploaded')) return;

            const file = e.target.files[0];
            const fileName = encodeURIComponent(file.name);

            if (uploadedFiles.includes(fileName)) {
                // 이미 추가된 파일 중 하나와 같은 이름을 가진 파일이면 추가하지 않음
                return;
            }

            formData.append('files[]', file, fileName);
            uploadedFiles.push(fileName);

            $imageItem.classList.add('uploaded');
            $imageItem.querySelector(
                '.uploadImageWrapper',
            ).innerHTML = `<img src="${URL.createObjectURL(
                file,
            )}" class="uploadedImage" alt="${fileName}">`;
        });

        // 이미지 삭제 버튼 클릭시
        $imageItem.addEventListener('click', (e) => {
            if (!e.target.matches('.partyImageReset')) return;

            $imageItem.classList.remove('uploaded');
            $imageItem.querySelector('.uploadImageWrapper').innerHTML = '';

            if (thumbnails[i]) {
                removedThumbnails.push(thumbnails[i]);
            }
        });
    });

    let addTags = [];
    let removedTags = [];

    document.querySelector('.tagList').addEventListener('click', (e) => {
        // 태그 삭제 버튼 클릭시
        if (e.target.closest('.tagResetButton')) {
            removedTags.push(e.target.closest('.tagItem').querySelector('.tag').textContent);
            e.target.closest('.tagItem').remove();
        }
    });

    const partyMakeForm = document.querySelector('.partyMakeForm');

    partyMakeForm.addEventListener('keydown', (e) => {
        if (e.key !== 'Enter') return;
        if (e.target.matches('.partyIntroduce')) {
            e.target.value += '\n';
            return;
        }
        if (e.keyCode === 229 || e.isComposing) return; // enter keydown 이벤트 감지시 한글 입력 깨지는 문제 해결

        e.preventDefault(); // enter키 눌렸을 때 submit 이벤트 방지

        // tag input에서 enter 입력했을 경우 태그 추가
        if (e.target.matches('.partyTag')) {
            addTags.push(e.target.value);
            addTag(e.target.value);
            e.target.value = '';
        }
    });

    let errorId = ['title-error', 'maxNumber-error', 'image-error', 'intro-error', 'address-error'];
    let error = document.querySelectorAll('.list > span');

    function innerReset(error) {
        for (let i = 0; i < error.length; i++) {
            error[i].innerHTML = '';
        }
    }

    innerReset(error);

    // 등록하기 버튼 눌렸을 때
    partyMakeForm.addEventListener('submit', (e) => {
        e.preventDefault();

        let errorStr = [
            ' 파티 제목을',
            ' 모집 인원을',
            ' 새로운 이미지를',
            ' 파티 소개를',
            ' 상세 주소를',
        ];

        innerReset(error);

        if (!$('#partyTitle').val().trim()) {
            document.getElementById(errorId[0]).innerHTML = errorStr[0] + ' 입력해 주세요.';
            $('#partyTitle').focus();
            return false;
        }

        if (!$('#partyTotalMemeber').val().trim()) {
            document.getElementById(errorId[1]).innerHTML = errorStr[1] + ' 입력해 주세요.';
            $('#partyTotalMemeber').focus();
            return false;
        }

        if ($('#partyTotalMemeber').val().trim() < 2) {
            document.getElementById(errorId[1]).innerHTML =
                errorStr[1] + ' 2명 이상 입력해 주세요.';
            $('#partyTotalMemeber').focus();
            return false;
        }

        if (!$('.uploadedImage').attr('src')) {
            document.getElementById(errorId[2]).innerHTML = errorStr[2] + ' 등록 해주세요.';
            $('#partyTotalMemeber').focus();
            return false;
        }

        if (!$('#partyIntroduce').val().trim()) {

            document.getElementById(errorId[3]).innerHTML = errorStr[3] + ' 입력해 주세요.';
            $('#partyImage1').focus();
            return false;
        }

        if ($('#partyAddressDetail').val() && !$('#partyAddressDetails').val().trim()) {
            document.getElementById(errorId[4]).innerHTML = errorStr[4] + ' 입력해 주세요.';
            $('#partyImage1').focus();
            return false;
        }

        $.ajax({
            type: 'POST',
            url: '/file/upload',
            cache: false,
            contentType: false,
            processData: false,
            data: formData,
            success: function (response) {
                let image = [];
                for (let i = 0; i < response.length; i++) {
                    image.push(response[i].filePath.location);
                }
                saveParty(image);
            },
            error: function (response) {
                customAlert(response.responseJSON.message, function () {
                    window.location.reload();
                });
            },
        });

        function saveParty(image) {
            let editedAddress;
            if ($('#partyAddressSearch').val()) {
                editedAddress =
                    $('#partyAddressSearch').val() + ' ' + $('#partyAddressDetail').val();
            } else {
                editedAddress = $('.addressWrapper').text();
            }

            let editedDate;
            if ($('.datePicker').val()) {
                editedDate = $('.datePicker').val();
            } else {
                editedDate = date;
            }
            const partyInfo = {
                title: $('#partyTitle').val(),
                content: $('#partyIntroduce').val(),
                maxMember: $('#partyTotalMemeber').val(),
                address: editedAddress,
                date: new Date(editedDate),
                addThumbnail: image,
                removeThumbnail: removedThumbnails,
                addTagName: addTags,
                removeTagName: removedTags,
            };

            $.ajax({
                type: 'PATCH',
                url: `/api/party/${partyId}`,
                data: partyInfo,
                headers: {
                    authorization: `Bearer ${sessionStorage.getItem('accessToken')}`,
                    refreshtoken: `${sessionStorage.getItem('refreshToken')}`,
                },
                success: function (response) {
                    customAlert('파티가 성공적으로 수정되었습니다.', function () {
                        window.location.replace('/party');
                    });
                },
                error: function (error) {
                    customAlert(error.responseJSON.message, function () {
                        window.location.reload();
                    });
                },
            });
        }
    });

    function addTag(value) {
        if (value.trim() === '') return;

        const newTagItem = document.createElement('li');
        newTagItem.classList.add('tagItem');

        newTagItem.innerHTML = `
        #
        <p class="tag">${value}</p>
        <button
            type="button"
            class="tagResetButton"
            aria-label="해당 태그 삭제"
        >
            <i class="bx bx-x" aria-hidden="true"></i>
        </button>
        `;

        document.querySelector('.tagInputWrapper').insertAdjacentElement('beforebegin', newTagItem);
    }

    function findAddress() {
        new daum.Postcode({
            oncomplete: function (data) {
                // 사용자 주소를 받아올 변수를 정의한다.
                var addr = '';

                //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.
                if (data.userSelectedType === 'R') {
                    // 사용자가 도로명 주소를 선택했을 경우(R)
                    addr = data.roadAddress;
                } else {
                    // 사용자가 지번 주소를 선택했을 경우(J)
                    addr = data.jibunAddress;
                }

                // 부모창의 주소칸에 받아온 주소를 넣는다.
                $('#partyAddressSearch').val(addr);
            },
        }).open();
    }
</script>
